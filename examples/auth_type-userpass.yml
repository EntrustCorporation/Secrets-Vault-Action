name: Test Secret Vault Action with UserPass Auth

on:
  workflow_dispatch:  # Allow manual trigger
  push:
    branches:
      - main
      - master
    paths:
      - '.github/workflows/auth_type-userpass.yml'

jobs:
  test-vault-userpass-auth:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      # Debug step to check if secrets exist (without exposing values)
      - name: Debug - Check Secrets Availability
        run: |
          echo "VAULT_USERNAME secret exists: ${{ secrets.VAULT_USERNAME != '' }}"
          echo "VAULT_PASSWORD secret exists: ${{ secrets.VAULT_PASSWORD != '' }}"
          echo "Other required secrets exist: ${{ secrets.BASE_URL != '' && secrets.VAULT_UID != '' && secrets.BOX_ID != '' && secrets.SECRET_ID != '' }}"
      
      - name: Fetch secret using username/password authentication
        id: fetch-secret
        uses: EntrustCorporation/secrets-vault-action@v1
        with:
          base_url: ${{ secrets.BASE_URL }}
          auth_type: 'userpass'
          username: ${{ secrets.VAULT_USERNAME }}
          password: ${{ secrets.VAULT_PASSWORD }}
          vault_uid: ${{ secrets.VAULT_UID }}
          ca_cert: ${{ secrets.CA_CERT }}
          secrets: |
            Box1.accessKey | AWS_ACCESS_KEY_ID;
            Box1.SimpleKVSecret | SIMPLE_KV_SECRET;
            Box1.ExampleTextSecret | EXAMPLE_TEXT_SECRET;
            Box2.StripeKey | STRIPE_KEY;
            Box1.DOCKER_USERNAME | DOCKER_USERNAME;
            Box1.DOCKER_PASSWORD | DOCKER_PASSWORD;
        # Set continue-on-error to true to allow the workflow to proceed even if this step fails
        continue-on-error: false
          
      - name: Verify secret was retrieved
        if: steps.fetch-secret.outcome == 'success'
        run: |
          echo "Secret was successfully retrieved"

      - name: Display the secret (for testing only)
        if: steps.fetch-secret.outcome == 'success'
        run: |
          # Display the actual secret for testing purposes

          echo "Retrieved AWS_ACCESS_KEY_ID: ${{ steps.fetch-secret.outputs.AWS_ACCESS_KEY_ID }}"
          
          echo "Retrieved AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}"

          echo "Retrieved secret value: ${{ steps.fetch-secret.outputs.DOCKER_USERNAME }}"
          SECRET_LENGTH=$(echo "${{ steps.fetch-secret.outputs.DOCKER_USERNAME }}" | wc -c)
          echo "Secret length: $SECRET_LENGTH characters"
        
      # Login to docker hub to push docker image
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ steps.fetch-secret.outputs.DOCKER_USERNAME }}
          password: ${{ steps.fetch-secret.outputs.DOCKER_PASSWORD }}

      # Build the actual application using secrets fetched from vault
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.fetch-secret.outputs.DOCKER_USERNAME }}/my-flask-app:latest
          build-args: |
            EXTERNAL_SECRET=${{ steps.fetch-secret.outputs.DOCKER_USERNAME }}